@page "/info"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Spectrum.Shared
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (applicationUser == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container emp-profile">
        <div class="row">
            <div class="col-md-4">
                <div class="profile-img">
                    <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS52y5aInsxSm31CvHOFHWujqUx_wWTS9iM6s7BAm21oEN_RiGoog" alt="" />
                    <div class="file btn btn-lg btn-primary">
                        Change Photo
                        <input type="file" name="file" />
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="profile-head">
                    <h5>
                        Greetings: @applicationUser.UserName
                    </h5>
                    <h6>
                        Portal Limit: @applicationUser.SpectrumPortalLimit
                    </h6>
                    <p class="proile-rating">RANKINGS : <span>8/10</span></p>
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">About</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">Timeline</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="col-md-2">
                <input type="submit" class="profile-edit-btn" name="btnAddMore" value="Edit Profile" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="profile-work">
                    <p>WORK LINK</p>
                    <a href="">Website Link</a><br />
                    <a href="">Bootsnipp Profile</a><br />
                    <a href="">Bootply Profile</a>
                    <p>SKILLS</p>
                    <a href="">Web Designer</a><br />
                    <a href="">Web Developer</a><br />
                    <a href="">WordPress</a><br />
                    <a href="">WooCommerce</a><br />
                    <a href="">PHP, .Net</a><br />
                </div>
            </div>
            <div class="col-md-8">
                <div class="tab-content profile-tab" id="myTabContent">
                    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                        <div class="row">
                            <div class="col-md-6">
                                <label>User Id</label>
                            </div>
                            <div class="col-md-6">
                                <p>Kshiti123</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Name</label>
                            </div>
                            <div class="col-md-6">
                                <p>Kshiti Ghelani</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Email</label>
                            </div>
                            <div class="col-md-6">
                                <p>kshitighelani@gmail.com</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Phone</label>
                            </div>
                            <div class="col-md-6">
                                <p>123 456 7890</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Profession</label>
                            </div>
                            <div class="col-md-6">
                                <p>Web Developer and Designer</p>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                        <div class="row">
                            <div class="col-md-6">
                                <label>Experience</label>
                            </div>
                            <div class="col-md-6">
                                <p>Expert</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Hourly Rate</label>
                            </div>
                            <div class="col-md-6">
                                <p>10$/hr</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Total Projects</label>
                            </div>
                            <div class="col-md-6">
                                <p>230</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>English Level</label>
                            </div>
                            <div class="col-md-6">
                                <p>Expert</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Availability</label>
                            </div>
                            <div class="col-md-6">
                                <p>6 months</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label>Your Bio</label><br />
                                <p>Your detail description</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @if (applicationUser.SpectrumPortal == null)
            {
                <p><em>No Portal to Manage, try create one.</em></p>

            }
            else
            {
                <ul class="list-group">

                    @foreach (var portal in applicationUser.SpectrumPortal)
                    {
                        <div class="card" style="width: 18rem;">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">Portal Id: @portal.Id</li>
                                <li class="list-group-item">Portal Name @portal.Name</li>
                                <li class="list-group-item">Portal Address @portal.PortalAddress</li>
                            </ul>
                        </div>
                        
                    }


                </ul>
            }
            <form>
                <button @onclick="CreatePortal"> Post Me</button>
            </form>

        </div>
    </div>
}
@code {
    private ApplicationUser? applicationUser;
    async Task<ApplicationUser> LoadApplicationUser()
    {
        var applicationUser = new ApplicationUser();
        try
        {
            applicationUser = await Http.GetFromJsonAsync<ApplicationUser>("/api/portal");
        }
        catch (AccessTokenNotAvailableException ex)
        {
            ex.Redirect();
        }
        return applicationUser!;
    }

    public async Task CreatePortal()
    {
        SpectrumPortal spectrumPortal = new SpectrumPortal()
            {
                Name = "Test",
                PortalAddress = "This Addr"
            };
        var response = await Http.PostAsJsonAsync("/api/portal", spectrumPortal);
        response.EnsureSuccessStatusCode();
        var portalId = await response.Content.ReadFromJsonAsync<Guid>();
    }

  

    //public async Task UpdatePortal(SpectrumPortal spectrumPortal)
    //{
    //    var response = await Http.PatchAsync("TenantInfo", spectrumPortal);
    //    response.EnsureSuccessStatusCode();
    //    var portalId = await response.Content.ReadFromJsonAsync<Guid>();
    //}



    protected override async Task OnInitializedAsync()
    {

        applicationUser = await LoadApplicationUser();
    }
}
