@page "/portal/manage/{portalAddr}"
@using Syncfusion.Blazor.BarcodeGenerator
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject PortalState PortalState
@inject PortalClient PortalClient
@attribute [Authorize]

@if (PortalState.ApplicationUser == null || PortalState.SelectedPortal == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        @if (PortalState.SelectedMission == null)
        {
            <div class="row">
                <div class="col">
                    <SfQRCodeGenerator Width="400" Height="400" Value="@PortalUrl">
                        <QRCodeGeneratorDisplayText Text="Client URL"></QRCodeGeneratorDisplayText>

                    </SfQRCodeGenerator>
                </div>
                <div class="col mportal-detail">
                    <div class="row">
                        <div class="col-md-6">
                            <label>Portal Name</label>
                        </div>
                        <div class="col-md-6">
                            <p>@PortalState!.SelectedPortal!.Name</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <label>All Missions</label>
                        </div>
                        <div class="col-md-6">
                            <p>@PortalState!.MissionCount</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <label>Active Missions</label>
                        </div>
                        <div class="col-md-6">
                            <p>@PortalState!.MissionActiveCount</p>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <CascadingValue Value="this">
                <Spectrum.Client.Pages.TicketUnion.MissionBoard SpectrumPortal="PortalState.SelectedPortal"></Spectrum.Client.Pages.TicketUnion.MissionBoard>
            </CascadingValue>
        </div>
    </div>
}


@code {
    [Parameter]
    public string? portalAddr { get; set; }

    public string PortalUrl { get; set; } = string.Empty;

    public void RefreshState()
    {
        this.StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        PortalState.RefreshRequested += RefreshState;

        if (string.IsNullOrWhiteSpace(portalAddr))
        {
            NavigationManager.NavigateTo("/portal");
        }
        if (PortalState.SelectedPortal == null)
        {
            PortalState.LoadUser(await LoadApplicationUser());
            PortalState.SetSelectedPortal(portalAddr!);
        }

        PortalUrl = NavigationManager.ToAbsoluteUri("sub/" + portalAddr).ToString();
    }

    protected async Task<ApplicationUser> LoadApplicationUser()
    {
        ApplicationUser? au = new ApplicationUser();
        try
        {
            au = await PortalClient.GetUserAndPortals();
            return au ?? new ApplicationUser();
        }
        catch (AccessTokenNotAvailableException ex)
        {
            ex.Redirect();
        }
        return au!;
    }




}
