@page "/portal/delete/{portalId}"
@inject PortalState PortalState
@inject PortalClient PortalClient
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Spectrum.Shared
@attribute [Authorize]

<h2>Delete Portal</h2>
<br />
<div class="form-group">
    <h4>Do you want to delete this Portal?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Name</td>
                <td>@PortalState.SelectedPortal!.Name</td>
            </tr>
            <tr>
                <td>PortalState.SelectedPortal! Address</td>
                <td>@PortalState.SelectedPortal!.PortalAddress</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () =>
        await RemovePortal(PortalState.SelectedPortal!.Id))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public string? portalId { get; set; }
    protected override void OnInitialized()
    {
        if (string.IsNullOrWhiteSpace(portalId) || PortalState.SelectedPortal == null)
        {
            NavigationManager.NavigateTo("/portal");
        }
    }
    protected async Task RemovePortal(string portalId)
    {
        PortalState.RemovePortal(portalId,await PortalClient.RemovePortal(portalId));
        NavigationManager.NavigateTo("/portal");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/portal");
    }


}